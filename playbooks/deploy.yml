---
- hosts: pi
  remote_user: pi
  vars:
    app_name: dhcp_watcher

  tasks:
    - name: Stops old release
      command: systemctl stop {{ app_name }}.service --user
      ignore_errors: yes

    - name: Clean up app dir
      ansible.builtin.file:
        path: /home/pi/apps/dhcp_watcher
        state: absent

    - name: Create Apps directory to deploy
      ansible.builtin.file:
        path: /home/pi/apps/dhcp_watcher
        state: directory

    - name: Deploy app to raspberry pi
      ansible.builtin.unarchive:
        src: ../{{ app_name }}-0.1.0.tar.gz
        dest: /home/pi/apps/{{ app_name }}
        creates: /home/pi/apps/{{ app_name }}/bin/

    - name: Create systemd config dir
      ansible.builtin.file:
        path: /home/pi/.config/systemd/user
        state: directory

    - name: Deploy systemd config
      ansible.builtin.copy:
        src: "../{{ app_name }}.service"
        dest: /home/pi/.config/systemd/user/{{ app_name }}.service
        owner: pi
        group: pi

    - name: Enable systemd service
      command:  systemctl enable {{ app_name }}.service --user
      register: result
      failed_when: result.rc != 0

    - name: Start server
      command:  systemctl start {{ app_name }}.service --user
      register: result
      failed_when: result.rc != 0